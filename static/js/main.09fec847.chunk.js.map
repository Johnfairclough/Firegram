{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/Uploadform.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","div","intial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","s","onClick","img","src","alt","initial","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAYeA,EAVD,WACZ,OACE,yBAAKC,UAAU,SACb,yCACA,6CACA,oG,2CCSJC,gBAXmB,CACjBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAKjB,IAAMC,EAAiBT,YACjBU,EAAmBV,cACnBW,EAAYX,YAAmBY,WAAWC,gBCUnCC,EA3BI,SAACC,GAAU,IAAD,EACOC,mBAAS,GADhB,mBAClBC,EADkB,KACRC,EADQ,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,OAGHJ,mBAAS,MAHN,mBAGlBK,EAHkB,KAGbC,EAHa,KAwBzB,OAlBJC,qBAAU,WAEN,IAAMC,EAAaf,EAAegB,IAAIV,EAAKW,MACrCC,EAAgBjB,EAAiBkB,WAAW,UAElDJ,EAAWK,IAAId,GAAMe,GAAG,iBAAiB,SAACC,GACtC,IAAIC,EAAcD,EAAKE,iBAAmBF,EAAKG,WAAc,IACzDhB,EAAYc,MACb,SAACG,GACAf,EAASe,KAJjB,sBAKO,8BAAAC,EAAA,sEACmBZ,EAAWa,iBAD9B,OACOhB,EADP,OAEOiB,EAAY3B,IAClBgB,EAAcY,IAAI,CAAElB,MAAKiB,cACzBhB,EAAOD,GAJR,8CAMJ,CAACN,IAEG,CAAEE,WAAUI,MAAKF,U,OCJbqB,EAnBK,SAAC,GAAuB,IAArBzB,EAAoB,EAApBA,KAAM0B,EAAc,EAAdA,QAAc,EACb3B,EAAWC,GAA7BM,EAD+B,EAC/BA,IAAKJ,EAD0B,EAC1BA,SAUb,OATAyB,QAAQC,IAAI1B,EAAUI,GAEtBE,qBAAU,WACFF,GACFoB,EAAQ,QAET,CAACpB,EAAKoB,IAIP,kBAAC,IAAOG,IAAR,CAAY7C,UAAU,eACtB8C,OAAQ,CAAEC,MAAO,GACjBC,QAAS,CAAED,MAAO7B,EAAW,QCmBtB+B,EAlCI,WAAO,IAAD,EACChC,mBAAS,MADV,mBAChBD,EADgB,KACV0B,EADU,OAEGzB,mBAAS,MAFZ,mBAEhBG,EAFgB,KAETC,EAFS,KAIf6B,EAAQ,CAAC,YAAa,cAe5B,OACI,8BACA,+BACA,2BAAOC,KAAK,OAAOC,SAhBD,SAACC,GACnB,IAAIC,EAAWD,EAAEE,OAAOC,MAAM,GAE1BF,GAAYJ,EAAMO,SAASH,EAASH,OACpCT,EAAQY,GACRjC,EAAS,MAETqB,EAAQ,MACRrB,EAAS,kDASb,oCAEA,yBAAKrB,UAAU,WACboB,GAAS,yBAAKpB,UAAU,SAAUoB,GAClCJ,GAAQ,6BAAOA,EAAKW,MACpBX,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,EAAM0B,QAASA,O,OCVrCgB,EAlBM,SAAC7B,GAAgB,IAAD,EACTZ,mBAAS,IADA,mBAC1B0C,EAD0B,KACpBC,EADoB,KAejC,OAZApC,qBAAU,WACQb,EAAiBkB,WAAWA,GACzCgC,QAAQ,YAAa,QACrBC,YAAW,SAAC9B,GACT,IAAI+B,EAAY,GAChB/B,EAAKgC,SAAQ,SAAAC,GACTF,EAAUG,KAAV,2BAAmBD,EAAIE,QAAvB,IAA+BC,GAAIH,EAAIG,SAE3CR,EAAQG,QAEb,CAAClC,IAEG,CAAE8B,SCQEU,EAtBG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACTX,EAASD,EAAa,UAAtBC,KAER,OACI,yBAAK3D,UAAU,YACZ2D,GAAQA,EAAKY,KAAI,SAAAN,GAAG,OACnB,kBAAC,IAAOpB,IAAR,CAAY7C,UAAU,WAAWwE,IAAKP,EAAIG,GACxCK,QAAM,EACNC,WAAY,CAAEC,QAAS,GAAIC,GAAC,EAC5BC,QAAS,kBAAMP,EAAeL,EAAI3C,OAElC,kBAAC,IAAOwD,IAAR,CAAYC,IAAKd,EAAI3C,IAAK0D,IAAI,eAC5BC,QAAS,CAAEN,QAAS,GACpB3B,QAAS,CAAE2B,QAAS,GACpBO,WAAY,CAAEC,MAAO,WCKtBC,EApBD,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaf,EAAqB,EAArBA,eAO1B,OACI,kBAAC,IAAOzB,IAAR,CAAY7C,UAAU,WAAW6E,QANjB,SAACxB,GACdA,EAAEE,OAAO+B,UAAUC,SAAS,aAC/BjB,EAAe,OAKfW,QAAS,CAAEN,QAAS,GACpB3B,QAAS,CAAE2B,QAAS,IAEpB,kBAAC,IAAOG,IAAR,CAAYC,IAAKM,EAAaL,IAAI,UAClCC,QAAS,CAAEO,EAAG,UACdxC,QAAS,CAAEwC,EAAG,OCGPC,MAbf,WAAgB,IAAD,EACyBxE,mBAAS,MADlC,mBACNoE,EADM,KACOf,EADP,KAGb,OACE,yBAAKtE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWsE,eAAgBA,IACzBe,GAAe,kBAAC,EAAD,CAAOA,YAAaA,EAAaf,eAAgBA,MCVxEoB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.09fec847.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>ImageWall</h1>\n      <h2>Your Pictures</h2>\n      <p>A simple, fun & creative way to share photos with friends & family.</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyB2Ps9m0DkABrRa6_f04zATXUrVQM7isqg\",\n    authDomain: \"firegram-c2ef1.firebaseapp.com\",\n    databaseURL: \"https://firegram-c2ef1.firebaseio.com\",\n    projectId: \"firegram-c2ef1\",\n    storageBucket: \"firegram-c2ef1.appspot.com\",\n    messagingSenderId: \"682852559094\",\n    appId: \"1:682852559094:web:5709361ac762d166bd24d7\",\n    measurementId: \"G-L4R0D17MMW\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const projectStorage = firebase.storage();\n  const projectFirestore = firebase.firestore();\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n  \n  export { projectStorage, projectFirestore, timestamp };","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n\nuseEffect(() => {\n    // references \n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n\n    storageRef.put(file).on('state_changed', (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(percentage);\n        }, (err) => {\n            setError(err);\n        }, async () => {\n            const url = await storageRef.getDownloadURL();\n            const createdAt = timestamp();\n            collectionRef.add({ url, createdAt })\n            setUrl(url);\n        })\n    }, [file]);\n\n    return { progress, url, error }\n}\n\nexport default useStorage;\n     ","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n    const { url, progress } = useStorage(file);\n    console.log(progress, url);\n\n    useEffect(() => {\n        if (url) {\n          setFile(null);\n        }\n      }, [url, setFile]);\n    \n\n    return (\n        <motion.div className=\"progress-bar\"\n        intial={{ width: 0 }}\n        animate={{ width: progress + '%' }} \n        ></motion.div>\n    )\n}\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg'];\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n\n        if (selected && types.includes(selected.type)) {\n            setFile(selected);\n            setError('');\n        } else {\n            setFile(null);\n            setError('Please select an image file of png or jped');\n        }\n\n    };\n\n    return (\n        <form>\n        <label>\n        <input type=\"file\" onChange={ changeHandler } />\n        <span>+</span>\n        </label>\n        <div className=\"oputput\">\n        { error && <div className=\"error\">{ error }</div> }\n        { file && <div>{ file.name }</div> }\n        { file && <ProgressBar file={file} setFile={setFile} /> }\n        </div>\n        </form>\n    );\n}\n\nexport default UploadForm;","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n        .orderBy('createdAt', 'desc')\n        .onSnapshot((snap) => {\n            let documents = [];\n            snap.forEach(doc => {\n                documents.push({...doc.data(), id: doc.id})\n            });\n            setDocs(documents);\n        });\n    }, [collection])\n\n    return { docs };\n}\n\nexport default useFirestore;\n","import React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n    const { docs } = useFirestore('images');\n\n    return (\n        <div className=\"img-grid\">\n          {docs && docs.map(doc => (\n            <motion.div className=\"img-wrap\" key={doc.id} \n              layout\n              whileHover={{ opacity: 1 }}s\n              onClick={() => setSelectedImg(doc.url)}\n            >\n              <motion.img src={doc.url} alt=\"uploaded pic\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 1 }}\n              />\n            </motion.div>\n          ))}\n        </div>\n    )\n}\n\nexport default ImageGrid;","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n\n    const handleClick = (e) => {\n        if(e.target.classList.contains('backdrop'))\n        setSelectedImg(null)\n    }\n\n    return (\n        <motion.div className=\"backdrop\" onClick={handleClick}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        >\n        <motion.img src={selectedImg} alt=\"Preview\" \n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n        />\n        </motion.div>\n    )\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/Uploadform';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} /> }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}